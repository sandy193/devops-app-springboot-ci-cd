node {

def mvnHome



stage('Prepare') {

git url: 'git@github.com:sandy193/devops-app-springboot-ci-cd.git', branch: 'integration'

mvnHome = tool 'mvn'

}



stage('Build') {

if (isUnix()) {

sh "'${mvnHome}/bin/mvn' -Dmaven.test.failure.ignore clean package"

} else {

bat(/"${mvnHome}\bin\mvn" -Dmaven.test.failure.ignore clean package/)

}

}

stage('Unit Test') {

junit '**/target/surefire-reports/TEST-*.xml'

archive 'target/*.war'

}

stage('Integration Test') {

if (isUnix()) {

sh "'${mvnHome}/bin/mvn' -Dmaven.test.failure.ignore clean verify"

} else {

bat(/"${mvnHome}\bin\mvn" -Dmaven.test.failure.ignore clean verify/)

}

}

stage('Sonar') {

if (isUnix()) {

sh "'${mvnHome}/bin/mvn' sonar:sonar"

} else {

bat(/"${mvnHome}\bin\mvn" sonar:sonar/)

}

}

stage('Docker Build'){

if (isUnix()) {
sh "docker build -t sandy193/devops-app-springboot-ci-cd:latest ."
} else {
bat("docker build -t sandy193/devops-app-springboot-ci-cd:latest .")
}

}

stage('DockerPush'){

withCredentials([usernamePassword(credentialsId:'DockerHubToken',usernameVariable:'DockerHubTokenUser',
passwordVariable:'DockerHubTokenPassword')]){

if (isUnix()) {
sh "docker login -u ${env.DockerHubTokenUser} -p ${DockerHubTokenPassword}"
sh 'docker push sandy193/devops-app-springboot-ci-cd:latest'
} else {
bat("docker login -u ${env.DockerHubTokenUser} -p ${DockerHubTokenPassword}")
bat('docker push sandy193/devops-app-springboot-ci-cd:latest')
}
}
}




stage('Publish') {

def server = Artifactory.server 'Artifactory'

def rtMaven = Artifactory.newMavenBuild()

rtMaven.tool = 'mvn'

rtMaven.resolver server: server, releaseRepo: 'libs-release', snapshotRepo: 'libs-snapshot'

rtMaven.deployer server: server, releaseRepo: 'libs-release-local', snapshotRepo: 'libs-snapshot-local'

def buildInfo = rtMaven.run pom: 'pom.xml', goals: 'install'

server.publishBuildInfo buildInfo

}
}